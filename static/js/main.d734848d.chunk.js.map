{"version":3,"sources":["components/Functional/Get.js","components/Clients/ClientOrders.js","components/Clients/ClientListItem.js","components/Clients/Clients.js","components/Home.js","components/Header.js","components/Clients/CreateClient.js","components/Functional/Delete.js","components/Orders/CreateOrder.js","components/Clients/Client.js","components/Orders/OrderListItem.js","components/Orders/OrderTanks.js","components/Orders/Orders.js","components/Orders/Order.js","components/Orders/EditOrder.js","components/Tanks/CreateTank.js","components/Tanks/Tanks.js","components/Materials/CreateMaterial.js","components/Tanks/DrawTank.js","components/Tanks/TankMaterials.js","components/Tanks/Tank.js","components/Tanks/EditTank.js","components/Supplies/Supplies.js","components/Supplies/Supply.js","components/Supplies/EditSupply.js","components/Materials/Materials.js","components/App.js","serviceWorker.js","index.js"],"names":["Get","par","this","props","handleData","datas","axios","get","path","then","res","data","handleDataChange","Component","ClientOrders","state","handleDatas","datasArray","setState","id","ClientID","ClientListItem","client","className","key","to","name","city","Clients","map","Home","Header","CreateClient","adress","person","number","email","post","response","console","log","catch","error","value","onChange","e","target","type","placeholder","onClick","submit","Delete","deleteItem","delete","CreateOrder","item","Client","match","params","OrderListItem","order","OrderID","OrderClient","Orders","Order","pathname","EditOrder","location","event","prevState","Object","assign","status","put","orderId","alert","fileInput","files","preventDefault","TankCapacity","capacity","OrderName","onSubmit","handleSubmit","updateCapacity","selected","ref","input","CreateTank","height","diameter","Tanks","tank","TankID","CrateMaterial","quantity","partnumber","DrawTank","tanks","xmlns","viewBox","fill","cx","cy","r","x","y","width","points","d","Tank","lenght","CreateMaterial","EditTank","tankId","Supplies","supply","SupplyID","created","MaterialID","EditSupply","Materials","material","App","from","exact","component","Supply","Boolean","window","hostname","ReactDOM","render","document","body","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"0QAoBeA,E,+KAdIC,GACfC,KAAKC,MAAMC,WAAWH,EAAII,S,0CAEP,IAAD,OAClBC,IAAMC,IAPC,yCAOUL,KAAKC,MAAMK,MAAMC,MAAK,SAACC,GACtC,IAAML,EAAQK,EAAIC,KAClB,EAAKC,iBAAiB,CAAEP,e,+BAI1B,OAAO,S,GAXOQ,aCmCHC,E,4MApCbC,MAAQ,CACNV,MAAO,I,EAETW,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEb,MAAOY,K,uDAIvB,OACE,yBAAKE,GAAG,iBACN,kBAAC,EAAD,CACEX,KAAM,iBAAmBN,KAAKC,MAAMiB,SACpChB,WAAYF,KAAKc,cAEjBd,KAAKa,MAAMV,W,GAfMQ,aCmBZQ,E,uKAhBX,IAAIC,EAASpB,KAAKC,MAAMmB,OACxB,OACE,yBAAKC,UAAU,0BAA0BC,IAAKF,EAAOF,UACnD,kBAAC,IAAD,CAAMK,GAAI,WAAaH,EAAOF,UAC5B,yBAAKG,UAAU,SACb,6BAAOD,EAAOI,MACd,6BAAOJ,EAAOK,a,GARGd,aCiCde,E,4MA/Bbb,MAAQ,CACNV,MAAO,I,EAETW,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEb,MAAOY,K,uDAGvB,OACE,yBAAKE,GAAG,UAAUI,UAAU,WAC1B,8CACA,yBAAKJ,GAAG,eACN,yBAAKA,GAAG,gBAAgBI,UAAU,mBAChC,4CACA,4CACA,2CACA,4CAEF,kBAAC,EAAD,CAAKf,KAAK,UAAUJ,WAAYF,KAAKc,cACpCd,KAAKa,MAAMV,MAAMwB,KAAI,SAACP,GAAD,OACpB,kBAAC,EAAD,CAAgBA,OAAQA,EAAQE,IAAKF,EAAOF,eAIhD,4BAAQD,GAAG,iBACT,kBAAC,IAAD,CAAMM,GAAG,mBAAT,oB,GAzBYZ,aCOPiB,E,uKARX,OACE,yBAAKX,GAAG,OAAOI,UAAU,QACvB,kBAAC,EAAD,W,GAJWV,aCkCJkB,E,uKAhCX,OACE,4BAAQR,UAAU,iBAChB,yBAAKA,UAAU,QACb,4BACE,wBAAIA,UAAU,aACZ,kBAAC,IAAD,CAAME,GAAG,KAAT,SAEF,wBAAIF,UAAU,aACZ,kBAAC,IAAD,CAAME,GAAG,YAAT,YAEF,wBAAIF,UAAU,aACZ,kBAAC,IAAD,CAAME,GAAG,WAAT,WAEF,wBAAIF,UAAU,aACZ,kBAAC,IAAD,CAAME,GAAG,UAAT,UAEF,wBAAIF,UAAU,aACZ,kBAAC,IAAD,CAAME,GAAG,aAAT,aAEF,wBAAIF,UAAU,aACZ,kBAAC,IAAD,CAAME,GAAG,cAAT,cAEF,wBAAIF,UAAU,aACZ,kBAAC,IAAD,CAAME,GAAG,UAAT,iB,GAzBOZ,aCwENmB,E,4MArEbjB,MAAQ,CACNW,KAAM,GACNC,KAAM,GACNM,OAAQ,GACRC,OAAQ,GACRC,OAAQ,GACRC,MAAO,I,uDAWP,OARA9B,IACG+B,KAAK,gCAAiCnC,KAAKa,OAC3CN,MAAK,SAAU6B,GACdC,QAAQC,IAAIF,EAAS3B,SAEtB8B,OAAM,SAAUC,GACfH,QAAQC,IAAIE,MAET,kBAAC,IAAD,CAAUjB,GAAG,gB,+BAEZ,IAAD,OACP,OACE,yBAAKN,GAAG,eAAeI,UAAU,WAC/B,+CACA,0BAAMA,UAAU,eACd,2BACEoB,MAAOzC,KAAKa,MAAMW,KAClBkB,SAAU,SAACC,GAAD,OAAO,EAAK3B,SAAS,CAAEQ,KAAMmB,EAAEC,OAAOH,SAChDI,KAAK,OACLC,YAAY,SAEd,2BACEL,MAAOzC,KAAKa,MAAMY,KAClBiB,SAAU,SAACC,GAAD,OAAO,EAAK3B,SAAS,CAAES,KAAMkB,EAAEC,OAAOH,SAChDI,KAAK,OACLC,YAAY,SAEd,2BACEL,MAAOzC,KAAKa,MAAMkB,OAClBW,SAAU,SAACC,GAAD,OAAO,EAAK3B,SAAS,CAAEe,OAAQY,EAAEC,OAAOH,SAClDI,KAAK,OACLC,YAAY,WAEd,2BACEL,MAAOzC,KAAKa,MAAMmB,OAClBU,SAAU,SAACC,GAAD,OAAO,EAAK3B,SAAS,CAAEgB,OAAQW,EAAEC,OAAOH,SAClDI,KAAK,OACLC,YAAY,mBAEd,2BACEL,MAAOzC,KAAKa,MAAMqB,MAClBQ,SAAU,SAACC,GAAD,OAAO,EAAK3B,SAAS,CAAEkB,MAAOS,EAAEC,OAAOH,SACjDI,KAAK,OACLC,YAAY,UAEd,2BACEL,MAAOzC,KAAKa,MAAMoB,OAClBS,SAAU,SAACC,GAAD,OAAO,EAAK3B,SAAS,CAAEiB,OAAQU,EAAEC,OAAOH,SAClDI,KAAK,SACLC,YAAY,UAEd,4BAAQD,KAAK,SAASJ,MAAM,SAASM,QAAS,kBAAM,EAAKC,WAAzD,uB,GA7DiBrC,aCkBZsC,E,4MAjBbC,WAAa,WAIX,OAHA9C,IAAM+C,OAHC,yBAGa,EAAKlD,MAAMK,MAAMC,MAAK,SAACC,GACzC6B,QAAQC,IAAI9B,MAEP,kBAAC,IAAD,CAAUe,GAAG,Y,uDAGpB,OACE,yBAAKF,UAAU,eACb,4BAAQA,UAAU,MAAM0B,QAAS/C,KAAKkD,YAAtC,e,GAVavC,aCsFNyC,E,4MAtFbvC,MAAQ,CACNW,KAAM,GACNC,KAAM,GACNM,OAAQ,GACRC,OAAQ,GACRd,SAAU,EAAKjB,MAAMiB,SACrBe,OAAQ,GACRC,MAAO,GACP/B,MAAO,I,EAETW,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEb,MAAOY,K,uDAGvBX,IACG+B,KAAK,+BAAgCnC,KAAKa,OAC1CN,MAAK,SAAU6B,GACdC,QAAQC,IAAIF,EAAS3B,SAEtB8B,OAAM,SAAUC,GACfH,QAAQC,IAAIE,Q,+BAGR,IAAD,OACP,OACE,yBAAKvB,GAAG,cAAcI,UAAU,WAC9B,8CACA,kBAAC,EAAD,CAAKf,KAAK,UAAUJ,WAAYF,KAAKc,cACrC,0BAAMO,UAAU,eACd,4BACEG,KAAK,SACLiB,MAAOzC,KAAKa,MAAMK,SAClBwB,SAAU,SAACC,GAAD,OAAO,EAAK3B,SAAS,CAAEE,SAAUyB,EAAEC,OAAOH,UAEnDzC,KAAKa,MAAMV,MAAMwB,KAAI,SAAC0B,GAAD,OACpB,4BAAQ/B,IAAK+B,EAAKnC,SAAUuB,MAAOY,EAAKnC,UACrCmC,EAAK7B,UAKZ,2BACEiB,MAAOzC,KAAKa,MAAMW,KAClBkB,SAAU,SAACC,GAAD,OAAO,EAAK3B,SAAS,CAAEQ,KAAMmB,EAAEC,OAAOH,SAChDI,KAAK,OACLC,YAAY,SAEd,2BACEL,MAAOzC,KAAKa,MAAMY,KAClBiB,SAAU,SAACC,GAAD,OAAO,EAAK3B,SAAS,CAAES,KAAMkB,EAAEC,OAAOH,SAChDI,KAAK,OACLC,YAAY,SAEd,2BACEL,MAAOzC,KAAKa,MAAMkB,OAClBW,SAAU,SAACC,GAAD,OAAO,EAAK3B,SAAS,CAAEe,OAAQY,EAAEC,OAAOH,SAClDI,KAAK,OACLC,YAAY,WAEd,2BACEL,MAAOzC,KAAKa,MAAMmB,OAClBU,SAAU,SAACC,GAAD,OAAO,EAAK3B,SAAS,CAAEgB,OAAQW,EAAEC,OAAOH,SAClDI,KAAK,OACLC,YAAY,mBAEd,2BACEL,MAAOzC,KAAKa,MAAMqB,MAClBQ,SAAU,SAACC,GAAD,OAAO,EAAK3B,SAAS,CAAEkB,MAAOS,EAAEC,OAAOH,SACjDI,KAAK,OACLC,YAAY,UAEd,2BACEL,MAAOzC,KAAKa,MAAMoB,OAClBS,SAAU,SAACC,GAAD,OAAO,EAAK3B,SAAS,CAAEiB,OAAQU,EAAEC,OAAOH,SAClDI,KAAK,SACLC,YAAY,UAEd,4BAAQD,KAAK,SAASJ,MAAM,SAASM,QAAS,kBAAM,EAAKC,WAAzD,sB,GA9EgBrC,aCoDX2C,E,4MAjDbzC,MAAQ,CACNV,MAAO,I,EAETW,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEb,MAAOY,K,uDAGf,IAAD,OACDZ,EAAUH,KAAKa,MAAfV,MACN,OACE,yBAAKkB,UAAU,UACb,kBAAC,EAAD,CAAKf,KAAM,UAAWN,KAAKC,MAAMsD,MAAMC,OAAOvC,GAAIf,WAAYF,KAAKc,cAClEX,EAAMwB,KAAI,SAAC0B,GACV,OACE,yBAAKhC,UAAU,kBACb,wCACA,yBAAKA,UAAU,cACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,QAAf,QACA,yBAAKA,UAAU,QAAf,QACA,yBAAKA,UAAU,UAAf,OAEF,yBAAKA,UAAU,QACb,yBAAKA,UAAU,IAAIgC,EAAK7B,MACxB,yBAAKH,UAAU,IAAIgC,EAAK5B,MACxB,yBAAKJ,UAAU,IAAIgC,EAAKnC,YAG5B,uCACA,yBAAKG,UAAU,QACb,yBAAKA,UAAU,mBACb,qCACA,sCAGD,kBAAC,EAAD,CAAcH,SAAU,EAAKjB,MAAMsD,MAAMC,OAAOvC,KACjD,kBAAC,EAAD,CAAaC,SAAU,EAAKjB,MAAMsD,MAAMC,OAAOvC,MAEjD,yBAAKI,UAAU,QACb,kBAAC,EAAD,CAAQwB,KAAK,SAASvC,KAAM,UAAW,EAAKL,MAAMsD,MAAMC,OAAOvC,e,GAxC1DN,aCsBN8C,GCxBU9C,Y,uKDGrB,IAAI+C,EAAQ1D,KAAKC,MAAMyD,MACvB,OACE,yBAAKzC,GAAG,eAAeI,UAAU,mCAAmCC,IAAKoC,EAAMC,SAC7E,yBAAKtC,UAAU,UACb,yBAAKC,IAAKoC,EAAMC,SAAUD,EAAMC,UAElC,kBAAC,IAAD,CAAOpC,GAAI,UAAYmC,EAAMC,SAC3B,yBAAKrC,IAAKoC,EAAMC,QAAStC,UAAU,SACjC,yBAAKC,IAAK,OAASD,UAAU,QAAQqC,EAAMlC,MAC3C,yBAAKF,IAAK,QAAUoC,EAAMjC,MAC1B,yBAAKH,IAAK,UAAYoC,EAAME,eAGhC,yBAAKvC,UAAU,sC,GAfKV,cEwCbkD,E,4MAtCbhD,MAAQ,CACNV,MAAO,I,EAETW,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEb,MAAOY,K,uDAGvB,OACE,yBAAKE,GAAG,SAASI,UAAU,WACzB,uCACA,yBAAKA,UAAU,cACb,yBAAKJ,GAAG,eAAeI,UAAU,mCAC/B,yBAAKA,UAAU,UACb,oCAEF,yBAAKA,UAAU,SACb,qCACA,qCACA,wCAEF,yBAAKA,UAAU,SACb,yCACA,uCACA,2CAGJ,kBAAC,EAAD,CAAKf,KAAK,SAASJ,WAAYF,KAAKc,cACnCd,KAAKa,MAAMV,MAAMwB,KAAI,SAAC+B,GACrB,OAAO,kBAAC,EAAD,CAAOpC,IAAKoC,EAAMC,QAASD,MAAOA,QAI7C,kBAAC,EAAD,W,GAjCa/C,aCuDNmD,E,4MApDbjD,MAAQ,CACNV,MAAO,I,EAETW,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEb,MAAOY,K,uDAEf,IAAD,OACDZ,EAAUH,KAAKa,MAAfV,MACN,OACE,yBAAKc,GAAG,SACN,kBAAC,EAAD,CACEX,KAAM,UAAYN,KAAKC,MAAMsD,MAAMC,OAAOvC,GAC1Cf,WAAYF,KAAKc,cAElBd,KAAKa,MAAMV,MAAMwB,KAAI,SAAC0B,GACrB,OACE,yBAAKhC,UAAU,WACb,yBAAKA,UAAU,QACb,wBAAIA,UAAU,aAAd,eAAuCgC,EAAK7B,MAC5C,0CAAgB6B,EAAK7B,MACrB,0CAAgB6B,EAAK5B,OAGvB,sCACA,yBAAKJ,UAAU,mBACb,qCACA,qCACA,sCAIF,yBAAKA,UAAU,YACb,kBAAC,EAAD,CAAQwB,KAAK,QAAQvC,KAAM,UAAY,EAAKL,MAAMsD,MAAMC,OAAOvC,KAC/D,kBAAC,IAAD,CACEM,GAAI,CACFwC,SAAU,aACVlD,MAAO,CACL6C,MAAOvD,EAAM,MAIjB,0D,GA1CEQ,aC2ELqD,G,kNA7EbnD,MAAQ,CACN6C,MAAO,EAAKzD,MAAMgE,SAASpD,MAAM6C,O,6DAEpBQ,GAAQ,IAAD,OACpBlE,KAAKgB,UAAS,SAACmD,GACb,IAAIT,EAAQU,OAAOC,OAAO,GAAIF,EAAUT,OAcxC,OAbAA,EAAMY,OAASJ,EACf9D,IACGmE,IAAI,gCAAkC,EAAK1D,MAAM6C,MAAMC,QAAS,CAC/DW,OAAQZ,EAAMY,OACdE,QAAS,EAAK3D,MAAM6C,MAAMC,UAE3BpD,MAAK,SAAU6B,GACdC,QAAQC,IAAIF,EAAS3B,SAEtB8B,OAAM,SAAUC,GACfH,QAAQC,IAAIE,MAGT,CAAEkB,c,mCAIAQ,GACXO,MAAM,4CACNpC,QAAQC,IAAItC,KAAK0E,UAAUC,MAAM,GAAGnD,MACpC0C,EAAMU,mB,+BAEE,IAAD,OACDlB,EAAU1D,KAAKa,MAAf6C,MAEN,OACE,yBAAKzC,GAAG,OAAOI,UAAU,WACvB,oCACA,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,aACb,yCACA,sCACA,oCAGF,yBAAKA,UAAU,OAAOC,IAAKoC,EAAMC,SAC/B,yBAAKrC,IAAKoC,EAAMmB,cAAenB,EAAMoB,SAArC,OACA,yBAAKxD,IAAKoC,EAAMqB,WAAYrB,EAAMY,QAClC,yBAAKhD,IAAKoC,EAAMC,SAAUD,EAAMC,SAChC,0BAAMqB,SAAUhF,KAAKiF,cACnB,2CAEE,2BACEpC,KAAK,SACLJ,MAAOzC,KAAKa,MAAM6C,MAAMY,OACxB5B,SAAU,SAACwB,GAAD,OAAW,EAAKgB,eAAehB,EAAMtB,OAAOH,UAExD,4BACEA,MAAOzC,KAAKa,MAAM6C,MAAMY,OACxB5B,SAAU,SAACwB,GAAD,OAAW,EAAKgB,eAAehB,EAAMtB,OAAOH,SAEtD,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,WAAd,WACA,4BAAQ0C,UAAQ,EAAC1C,MAAM,QAAvB,QAGA,4BAAQA,MAAM,SAAd,WAGJ,+BACE,2BAAOI,KAAK,OAAOuC,IAAK,SAACC,GAAD,OAAY,EAAKX,UAAYW,MAEvD,2BAAOxC,KAAK,SAASJ,MAAM,wB,GArEjB9B,cC+ET2E,E,4MA/EbzE,MAAQ,CACNiE,SAAU,GACVS,OAAQ,GACRC,SAAU,GACV3C,KAAM,GACNc,QAAS,GACTxD,MAAO,I,EAETW,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEb,MAAOY,K,uDAGvBX,IACG+B,KAAK,8BAA+BnC,KAAKa,OACzCN,MAAK,SAAU6B,GACdC,QAAQC,IAAIF,EAAS3B,SAEtB8B,OAAM,SAAUC,GACfH,QAAQC,IAAIE,Q,+BAGR,IAAD,OAEP,OACE,yBAAKvB,GAAG,cAAcI,UAAU,WAC9B,6CACA,0BAAMA,UAAU,yBAChB,kBAAC,EAAD,CAAKf,KAAK,SAASJ,WAAYF,KAAKc,cAClC,4BACEU,KAAK,QACLiB,MAAOzC,KAAKa,MAAM8C,QAClBjB,SAAU,SAACC,GAAD,OAAO,EAAK3B,SAAS,CAAE2C,QAAShB,EAAEC,OAAOH,UAElDzC,KAAKa,MAAMV,MAAMwB,KAAI,SAAC0B,GAAD,OACpB,4BAAQ/B,IAAK+B,EAAKM,QAASlB,MAAOY,EAAKM,SACpCN,EAAK7B,UAKZ,2BACEiB,MAAOzC,KAAKa,MAAMiE,SAClBpC,SAAU,SAACC,GAAD,OAAO,EAAK3B,SAAS,CAAE8D,SAAUnC,EAAEC,OAAOH,SACpDI,KAAK,SACLC,YAAY,aAEd,2BACEL,MAAOzC,KAAKa,MAAM0E,OAClB7C,SAAU,SAACC,GAAD,OAAO,EAAK3B,SAAS,CAAEuE,OAAQ5C,EAAEC,OAAOH,SAClDI,KAAK,SACLC,YAAY,WAGd,2BACEL,MAAOzC,KAAKa,MAAM2E,SAClB9C,SAAU,SAACC,GAAD,OAAO,EAAK3B,SAAS,CAAEwE,SAAU7C,EAAEC,OAAOH,SACpDI,KAAK,SACLC,YAAY,aAEd,4BACEtB,KAAK,OACLiB,MAAOzC,KAAKa,MAAMgC,KAClBH,SAAU,SAACC,GAAD,OAAO,EAAK3B,SAAS,CAAE6B,KAAMF,EAAEC,OAAOH,UAxC5C,CAAC,MAAO,QAAS,KAAM,QA0CpBd,KAAI,SAAC0B,GAAD,OACT,4BAAQ/B,IAAK+B,EAAMZ,MAAOY,GACvBA,OAIP,4BAAQR,KAAK,SAASJ,MAAM,SAASM,QAAS,kBAAM,EAAKC,WAAzD,qB,GAvEerC,aCyCV8E,E,4MAtCb5E,MAAQ,CACNV,MAAO,I,EAETW,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEb,MAAOY,K,uDAGvB,OACE,yBAAKE,GAAG,QAAQI,UAAU,WACxB,sCACA,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,mBACb,yCACA,sCACA,qCAGJ,kBAAC,EAAD,CAAKf,KAAK,QAAQJ,WAAYF,KAAKc,cAClCd,KAAKa,MAAMV,MAAMwB,KAAI,SAAC+D,GAAD,OACpB,kBAAC,IAAD,CACEnE,GAAI,SAAWmE,EAAKC,OACpBrE,IAAKoE,EAAKX,UAAY,IAAMW,EAAKC,QAEjC,yBAAKtE,UAAU,oBACb,6BAAMqE,EAAKb,cACX,6BAAMa,EAAKX,WACX,6BAAMW,EAAKC,cAKnB,kBAAC,EAAD,W,GAjCYhF,aCoDLiF,E,4MArDb/E,MAAQ,CACNW,KAAM,GACNqE,SAAU,GACVC,WAAY,GACZH,OAAQ,EAAK1F,MAAMyF,M,qDAEdxB,GACL9D,IACG+B,KAAK,mCAAoCnC,KAAKa,OAC9CN,MAAK,SAAU6B,GACdC,QAAQC,IAAIF,EAAS3B,SAEtB8B,OAAM,SAAUC,GACfH,QAAQC,IAAIE,Q,+BAGR,IAAD,OACP,OACE,yBAAKnB,UAAU,QACb,gDACA,0BAAMA,UAAU,yBACd,uCAEE,2BACEwB,KAAK,OACLJ,MAAOzC,KAAKa,MAAMW,KAClBkB,SAAU,SAACC,GAAD,OAAO,EAAK3B,SAAS,CAAEQ,KAAMmB,EAAEC,OAAOH,YAGpD,8CAEE,2BACEI,KAAK,OACLJ,MAAOzC,KAAKa,MAAMiF,WAClBpD,SAAU,SAACC,GAAD,OAAO,EAAK3B,SAAS,CAAE8E,WAAYnD,EAAEC,OAAOH,YAG1D,2CAEE,2BACEI,KAAK,OACLJ,MAAOzC,KAAKa,MAAMgF,SAClBnD,SAAU,SAACC,GAAD,OAAO,EAAK3B,SAAS,CAAE6E,SAAUlD,EAAEC,OAAOH,YAGxD,4BAAQI,KAAK,SAASJ,MAAM,SAASM,QAAS,kBAAM,EAAKC,WAAzD,yB,GA9CkBrC,aC+BboF,GC/BapF,Y,4MDA1BE,MAAQ,CACN0E,OAAQ,GACRC,SAAU,EAAKvF,MAAMyF,KACrBM,MAAO,G,uDAGC,IAAD,OACShG,KAAKa,MAAfmF,MACN,OACE,yBAAK/E,GAAG,WAAWI,UAAU,WAC3B,0CACA,yBAAKJ,GAAG,OACN,2BACE4B,KAAK,OACLJ,MAAOzC,KAAKa,MAAM2E,SAClB9C,SAAU,SAACC,GAAD,OAAO,EAAK3B,SAAS,CAAEwE,SAAU7C,EAAEC,OAAOH,WAEtD,yBAAKwD,MAAM,6BAA6BC,QAAQ,eAC9C,uBAAGC,KAAK,QACN,4BAAQC,GAAG,MAAMC,GAAG,MAAMC,EAAGtG,KAAKa,MAAM2E,WACxC,0BAAMe,EAAE,KAAKC,EAAE,MAAMC,MAA2B,GAApBzG,KAAKa,MAAM2E,SAAaD,OAAQvF,KAAKa,MAAM0E,SACvE,6BAASmB,OAAO,yBAChB,0BAAMC,EAAE,yB,GAvBChG,cEiERiG,E,4MAxDb/F,MAAQ,CACNV,MAAO,I,EAETW,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEb,MAAOY,K,uDAEf,IAAD,OACP,OACE,yBAAKE,GAAG,OAAOI,UAAU,WACvB,kBAAC,EAAD,CACEf,KAAM,SAAWN,KAAKC,MAAMsD,MAAMC,OAAOvC,GACzCf,WAAYF,KAAKc,cAEnB,oCACA,yBAAKO,UAAU,4BAA4BC,IAAI,UAC7C,yBAAKD,UAAU,aACb,yBAAKA,UAAU,YAAf,YACA,yBAAKA,UAAU,UAAf,UACA,yBAAKA,UAAU,YAAf,YACA,yBAAKA,UAAU,MAAf,OAEDrB,KAAKa,MAAMV,MAAMwB,KAAI,SAAC0B,GACrB,OAAIA,EAAKwD,OAAS,EAEd,yBAAKxF,UAAU,OAAOC,IAAK+B,EAAKsC,QAC9B,6BAAMtC,EAAKyB,SAAX,OACA,6BAAMzB,EAAKkC,OAAX,MACA,6BAAMlC,EAAKmC,SAAX,MACA,6BAAMnC,EAAKsC,QACX,kBAAC,EAAD,CAAUD,KAAMrC,EAAKkC,SACrB,kBAAC,IAAD,CACEhE,GAAI,CACFwC,SAAU,YACVlD,MAAO,CACL6E,KAAM,EAAK7E,MAAMV,MAAM,MAI3B,gDAKC,yBAAKkB,UAAU,QAAf,YAIb,0CAvCF,WAyCM,kBAACyF,EAAD,CAAgBpB,KAAM1F,KAAKC,MAAMsD,MAAMC,OAAOvC,KAClD,kBAAC,EAAD,CAAQX,KAAM,SAAWN,KAAKC,MAAMsD,MAAMC,OAAOvC,U,GAnDtCN,aC6DJoG,E,4MAlEblG,MAAQ,CACN6E,KAAM,EAAKzF,MAAMgE,SAASpD,MAAM6E,M,6DAEnBxB,GAAQ,IAAD,OACpBlE,KAAKgB,UAAS,SAACmD,GACb,IAAIuB,EAAOtB,OAAOC,OAAO,GAAIF,EAAUuB,MAavC,OAZAA,EAAKZ,SAAWZ,EAChB9D,IACCmE,IAAI,+BAA+B,EAAK1D,MAAM6E,KAAKC,OAAQ,CAC1Db,SAAUY,EAAKZ,SACfkC,OAAQ,EAAKnG,MAAM6E,KAAKC,SAEzBpF,MAAK,SAAU6B,GACdC,QAAQC,IAAIF,EAAS3B,SAEtB8B,OAAM,SAAUC,GACfH,QAAQC,IAAIE,MAEP,CAAEkD,a,mCAKAxB,GACXO,MAAM,4CACNpC,QAAQC,IAAItC,KAAK0E,UAAUC,MAAM,GAAGnD,MACpC0C,EAAMU,mB,+BAEE,IAAD,OACDc,EAAS1F,KAAKa,MAAd6E,KAEN,OACE,yBAAKrE,UAAU,gBACb,oCACA,yBAAKA,UAAU,4BAA4BC,IAAI,UAC7C,yBAAKD,UAAU,aACb,yBAAKA,UAAU,QAAf,YACA,yBAAKA,UAAU,QAAf,SACA,yBAAKA,UAAU,UAAf,OAGF,yBAAKA,UAAU,OAAOC,IAAKoE,EAAKC,QAC9B,yBAAKrE,IAAKoE,EAAKb,cAAea,EAAKZ,SAAnC,OACA,yBAAKxD,IAAKoE,EAAKX,WAAYW,EAAKH,OAAhC,KACA,yBAAKjE,IAAKoE,EAAKC,QAASD,EAAKC,QAC7B,0BAAMX,SAAUhF,KAAKiF,cACnB,2CAEE,2BACEpC,KAAK,SACLJ,MAAOzC,KAAKa,MAAM6E,KAAKZ,SACvBpC,SAAU,SAACwB,GAAD,OAAW,EAAKgB,eAAehB,EAAMtB,OAAOH,WAG1D,+BACE,2BAAOI,KAAK,OAAOuC,IAAK,SAACC,GAAD,OAAY,EAAKX,UAAYW,MAEvD,2BAAOxC,KAAK,SAASJ,MAAM,wB,GA1DlB9B,aCkCRsG,E,4MAjCbpG,MAAQ,CACNV,MAAO,I,EAETW,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEb,MAAOY,K,uDAIvB,OACE,yBAAKM,UAAU,oBACb,kBAAC,EAAD,CAAKf,KAAM,WAAYJ,WAAYF,KAAKc,cACxC,yCACA,yBAAKO,UAAU,SAASC,IAAI,UAC1B,yBAAKD,UAAU,mBACb,yBAAKA,UAAU,QAAf,WACA,yBAAKA,UAAU,QAAf,aACA,yBAAKA,UAAU,UAAf,eAGHrB,KAAKa,MAAMV,MAAMwB,KAAI,SAACuF,GAAD,OACpB,kBAAC,IAAD,CAAM3F,GAAI,WAAa2F,EAAOC,SAAU7F,IAAK4F,EAAOC,UAClD,yBAAK9F,UAAU,oBACb,6BAAM6F,EAAOE,SACb,6BAAMF,EAAOC,UACb,6BAAMD,EAAOC,oB,GAzBJxG,aCoDRmD,E,4MAlDbjD,MAAQ,CACNV,MAAO,I,EAETW,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEb,MAAOY,K,uDAEf,IAAD,OACDZ,EAAUH,KAAKa,MAAfV,MACN,OACE,yBAAKkB,UAAU,SACb,kBAAC,EAAD,CACEf,KAAM,YAAcN,KAAKC,MAAMsD,MAAMC,OAAOvC,GAC5Cf,WAAYF,KAAKc,cAElBX,EAAMwB,KAAI,SAAC0B,GACV,OACE,yBAAKhC,UAAU,WACb,yBAAKA,UAAU,QACb,wBAAIA,UAAU,aAAd,gBAAwCgC,EAAK7B,MAC7C,uCAAa6B,EAAK8D,UAClB,wCAAc9D,EAAKgE,aAGrB,sCACA,yBAAKhG,UAAU,mBACb,qCACA,qCACA,sCAEF,kBAAC,IAAD,CACEE,GAAI,CACFwC,SAAU,cACVlD,MAAO,CACLqG,OAAQ/G,EAAM,MAIlB,gDACA,yBAAKkB,UAAU,QACf,kBAAC,EAAD,CAAQf,KAAM,YAAa,EAAKL,MAAMsD,MAAMC,OAAOvC,gB,GAxC/CN,aC0EL2G,E,4MA3EbzG,MAAQ,CACNqG,OAAQ,EAAKjH,MAAMgE,SAASpD,MAAMqG,Q,6DAErBhD,GAAQ,IAAD,OACpBlE,KAAKgB,UAAS,SAACmD,GACb,IAAI+C,EAAS9C,OAAOC,OAAO,GAAIF,EAAU+C,QAczC,OAbAA,EAAO5C,OAASJ,EAChB9D,IACGmE,IAAI,kCAAoC,EAAK1D,MAAMqG,OAAOC,SAAU,CACnE7C,OAAQ4C,EAAO5C,OACf6C,SAAU,EAAKtG,MAAMqG,OAAOC,WAE7B5G,MAAK,SAAU6B,GACdC,QAAQC,IAAIF,EAAS3B,SAEtB8B,OAAM,SAAUC,GACfH,QAAQC,IAAIE,MAGT,CAAE0E,e,mCAIAhD,GACXO,MAAM,4CACNpC,QAAQC,IAAItC,KAAK0E,UAAUC,MAAM,GAAGnD,MACpC0C,EAAMU,mB,+BAEE,IAAD,OACDsC,EAAWlH,KAAKa,MAAhBqG,OAEN,OACE,yBAAK7F,UAAU,gBACb,oCACA,yBAAKA,UAAU,4BAA4BC,IAAI,UAC7C,yBAAKD,UAAU,aACb,yBAAKA,UAAU,QAAf,YACA,yBAAKA,UAAU,QAAf,SACA,yBAAKA,UAAU,UAAf,OAGF,yBAAKA,UAAU,OAAOC,IAAK4F,EAAOvD,SAChC,yBAAKrC,IAAK4F,EAAO5C,QAAS4C,EAAO5C,QACjC,0BAAMU,SAAUhF,KAAKiF,cACnB,2CAEE,2BACEpC,KAAK,SACLJ,MAAOzC,KAAKa,MAAMqG,OAAO5C,OACzB5B,SAAU,SAACwB,GAAD,OAAW,EAAKgB,eAAehB,EAAMtB,OAAOH,UAExD,4BACEA,MAAOzC,KAAKa,MAAMqG,OAAO5C,OACzB5B,SAAU,SAACwB,GAAD,OAAW,EAAKgB,eAAehB,EAAMtB,OAAOH,SAEtD,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,QAAd,QAGA,4BAAQA,MAAM,SAAd,WAGJ,+BACE,2BAAOI,KAAK,OAAOuC,IAAK,SAACC,GAAD,OAAY,EAAKX,UAAYW,MAEvD,2BAAOxC,KAAK,SAASJ,MAAM,wB,GAnEhB9B,aC+BV4G,E,4MA/Bb1G,MAAQ,CACNV,MAAO,I,EAETW,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEb,MAAOY,K,uDAIvB,OACE,yBAAKM,UAAU,kCACb,0CACA,yBAAKA,UAAU,4BAA4BC,IAAI,UAC7C,yBAAKD,UAAU,mBACb,yBAAKA,UAAU,QAAf,YACA,yBAAKA,UAAU,QAAf,SACA,yBAAKA,UAAU,UAAf,QAGJ,kBAAC,EAAD,CAAKf,KAAK,YAAYJ,WAAYF,KAAKc,cACtCd,KAAKa,MAAMV,MAAMwB,KAAI,SAAC6F,GAAD,OACpB,yBAAKnG,UAAU,mBAAmBC,IAAKkG,EAASH,YAC9C,6BAAMG,EAAShG,MACf,6BAAMgG,EAAS7B,QACf,6BAAM6B,EAAS3B,mB,GAxBHlF,aCqDT8G,E,uKA5BX,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,8BACA,kBAAC,IAAD,CAAUC,KAAK,cAAcnG,GAAG,aAC9B,kBAAC,IAAD,CAAOoG,OAAK,EAACrH,KAAK,WAAWsH,UAAWlG,IACxC,kBAAC,IAAD,CAAOiG,OAAK,EAACrH,KAAK,kBAAkBsH,UAAW9F,IAC/C,kBAAC,IAAD,CAAO6F,OAAK,EAACrH,KAAK,cAAcsH,UAAWtE,IAC3C,kBAAC,IAAD,CAAOqE,OAAK,EAACrH,KAAK,UAAUsH,UAAW/D,IACvC,kBAAC,IAAD,CAAO8D,OAAK,EAACrH,KAAK,iBAAiBsH,UAAWxE,IAC9C,kBAAC,IAAD,CAAOuE,OAAK,EAACrH,KAAK,aAAasH,UAAW9D,IAC1C,kBAAC,IAAD,CAAO6D,OAAK,EAACrH,KAAK,SAASsH,UAAWnC,IACtC,kBAAC,IAAD,CAAOkC,OAAK,EAACrH,KAAK,YAAYsH,UAAWhB,IACzC,kBAAC,IAAD,CAAOe,OAAK,EAACrH,KAAK,YAAYsH,UAAWX,IACzC,kBAAC,IAAD,CAAOU,OAAK,EAACrH,KAAK,cAAcsH,UAAWC,IAC3C,kBAAC,IAAD,CAAOF,OAAK,EAACrH,KAAK,YAAYsH,UAAWb,IACzC,kBAAC,IAAD,CAAOY,OAAK,EAACrH,KAAK,aAAasH,UAAW5D,IAC1C,kBAAC,IAAD,CAAO2D,OAAK,EAACrH,KAAK,cAAcsH,UAAWN,IAC3C,kBAAC,IAAD,CAAOK,OAAK,EAACrH,KAAK,aAAasH,UAAWL,IAC1C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOI,OAAK,EAACrH,KAAK,IAAIsH,UAAWhG,W,GAtB3BjB,aCbEmH,QACW,cAA7BC,OAAO9D,SAAS+D,UAEe,UAA7BD,OAAO9D,SAAS+D,UAEhBD,OAAO9D,SAAS+D,SAASzE,MACvB,2DCPN0E,IAASC,OACP,kBAAC,IAAD,KACI,kBAAC,EAAD,OAEJC,SAASC,MDoHL,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhI,MAAK,SAACiI,GACLA,EAAaC,gBAEdlG,OAAM,SAACC,GACNH,QAAQG,MAAMA,EAAMkG,c","file":"static/js/main.d734848d.chunk.js","sourcesContent":["import { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nlet host = 'https://tanksvueapi.azurewebsites.net/'\r\n\r\nclass Get extends Component {\r\n  handleDataChange(par)  {\r\n    this.props.handleData(par.datas)\r\n  }\r\n  componentDidMount() {\r\n    axios.get(host + this.props.path).then((res) => {\r\n      const datas = res.data\r\n      this.handleDataChange({ datas });\r\n    })\r\n  }\r\n  render() {\r\n    return null\r\n  }\r\n}\r\n\r\nexport default Get\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Get from '../Functional/Get'\r\nclass ClientOrders extends Component {\r\n  state = {\r\n    datas: [],\r\n  }\r\n  handleDatas = (datasArray) => {\r\n    this.setState({ datas: datasArray })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"ClientOrders \">\r\n        <Get\r\n          path={'client/orders/' + this.props.ClientID}\r\n          handleData={this.handleDatas}\r\n        />\r\n        { this.state.datas}\r\n{/*         {this.state.datas.map((item) => {\r\n          return console.log(item.name)\r\n          /*           if (item.lenght > 0) {\r\n            return (\r\n              <Link to={'/order/' + item.OrderID} key={item.OrderID}>\r\n                <div className=\"Row-2 Item Hover\">\r\n                  <div>{item.name}</div>\r\n                  <div>{item.city}</div>\r\n                </div>\r\n              </Link>\r\n            )\r\n          }\r\n          else {\r\n            return (<div className=\"null\">null</div>)\r\n          } \r\n        })} */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ClientOrders\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport ClientOrders from './ClientOrders'\r\n\r\nclass ClientListItem extends Component {\r\n  render() {\r\n    let client = this.props.client\r\n    return (\r\n      <div className=\"Client Item Row-2 Hover\" key={client.ClientID}>\r\n        <Link to={'/client/' + client.ClientID}>\r\n          <div className=\"Row-2\">\r\n            <div >{client.name}</div>\r\n            <div >{client.city}</div>\r\n          </div>\r\n        </Link>\r\n\r\n        {/* <ClientOrders key={client.ClientID} ClientID={client.ClientID} /> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ClientListItem\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport ClientListItem from './ClientListItem'\r\nimport Get from '../Functional/Get'\r\n\r\nclass Clients extends Component {\r\n  state = {\r\n    datas: [],\r\n  }\r\n  handleDatas = (datasArray) => {\r\n    this.setState({ datas: datasArray })\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"Clients\" className=\"Wrapper\">\r\n        <h2>Clients List: </h2>\r\n        <div id=\"ClientsList\">\r\n          <div id=\"ClientsHeader\" className=\"Item Head Row-4\">\r\n            <div>Client Name</div>\r\n            <div>Client City</div>\r\n            <div>Order Name</div>\r\n            <div>Order City</div>\r\n          </div>\r\n          <Get path=\"clients\" handleData={this.handleDatas} />\r\n          {this.state.datas.map((client) => (\r\n            <ClientListItem client={client} key={client.ClientID} />\r\n          ))}\r\n        </div>\r\n\r\n        <button id=\"Btn-AddClient\">\r\n          <Link to=\"/clients/create\">Add Client</Link>\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Clients\r\n","import React, { Component } from 'react'\r\nimport Clients from './Clients/Clients'\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"Home\" className=\"Home\">\r\n        <Clients />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header className=\"Header Column\">\r\n        <div className=\"Menu\">\r\n          <ul>\r\n            <li className=\"Menu-Item\">\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li className=\"Menu-Item\">\r\n              <Link to=\"/clients\">Clients</Link>\r\n            </li>\r\n            <li className=\"Menu-Item\">\r\n              <Link to=\"/orders\">Orders</Link>\r\n            </li>\r\n            <li className=\"Menu-Item\">\r\n              <Link to=\"/tanks\">Tanks</Link>\r\n            </li>\r\n            <li className=\"Menu-Item\">\r\n              <Link to=\"/supplies\">Supplies</Link>\r\n            </li>\r\n            <li className=\"Menu-Item\">\r\n              <Link to=\"/materials\">Materials</Link>\r\n            </li>\r\n            <li className=\"Menu-Item\">\r\n              <Link to=\"/store\">Store</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateClient extends Component {\r\n  state = {\r\n    name: '',\r\n    city: '',\r\n    adress: '',\r\n    person: '',\r\n    number: '',\r\n    email: '',\r\n  }\r\n  submit() {\r\n    axios\r\n      .post('http://localhost:4000/clients', this.state)\r\n      .then(function (response) {\r\n        console.log(response.data)\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n    return <Redirect to=\"/clients/\" />\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"CreateClient\" className=\"Wrapper\">\r\n        <h2>Create Client: </h2>\r\n        <form className=\"Item Column\">\r\n          <input\r\n            value={this.state.name}\r\n            onChange={(e) => this.setState({ name: e.target.value })}\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n          />\r\n          <input\r\n            value={this.state.city}\r\n            onChange={(e) => this.setState({ city: e.target.value })}\r\n            type=\"text\"\r\n            placeholder=\"City\"\r\n          />\r\n          <input\r\n            value={this.state.adress}\r\n            onChange={(e) => this.setState({ adress: e.target.value })}\r\n            type=\"text\"\r\n            placeholder=\"Adress\"\r\n          />\r\n          <input\r\n            value={this.state.person}\r\n            onChange={(e) => this.setState({ person: e.target.value })}\r\n            type=\"text\"\r\n            placeholder=\"Contact Person\"\r\n          />\r\n          <input\r\n            value={this.state.email}\r\n            onChange={(e) => this.setState({ email: e.target.value })}\r\n            type=\"text\"\r\n            placeholder=\"Email\"\r\n          />\r\n          <input\r\n            value={this.state.number}\r\n            onChange={(e) => this.setState({ number: e.target.value })}\r\n            type=\"number\"\r\n            placeholder=\"Phone\"\r\n          />\r\n          <button type=\"button\" value=\"Submit\" onClick={() => this.submit()}>\r\n            Submit client\r\n          </button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CreateClient\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport { Redirect } from 'react-router-dom'\r\nlet host = 'http://localhost:4000/'\r\nclass Delete extends Component {\r\n  deleteItem = () => {\r\n    axios.delete(host + this.props.path).then((res) => {\r\n      console.log(res)\r\n    })\r\n    return <Redirect to=\"/tanks\" />\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Delete Item\">\r\n        <button className=\"Red\" onClick={this.deleteItem}>\r\n          Delete\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Delete\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport Get from '../Functional/Get'\r\nclass CreateOrder extends Component {\r\n  state = {\r\n    name: '',\r\n    city: '',\r\n    adress: '',\r\n    person: '',\r\n    ClientID: this.props.ClientID,\r\n    number: '',\r\n    email: '',\r\n    datas: [],\r\n  }\r\n  handleDatas = (datasArray) => {\r\n    this.setState({ datas: datasArray })\r\n  }\r\n  submit() {\r\n    axios\r\n      .post('http://localhost:4000/orders', this.state)\r\n      .then(function (response) {\r\n        console.log(response.data)\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"CreateOrder\" className=\"Wrapper\">\r\n        <h2>Create Order: </h2>\r\n        <Get path=\"clients\" handleData={this.handleDatas} />\r\n        <form className=\"Item Column\">\r\n          <select\r\n            name=\"Client\"\r\n            value={this.state.ClientID}\r\n            onChange={(e) => this.setState({ ClientID: e.target.value })}\r\n          >\r\n            {this.state.datas.map((item) => (\r\n              <option key={item.ClientID} value={item.ClientID}>\r\n                {item.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n\r\n          <input\r\n            value={this.state.name}\r\n            onChange={(e) => this.setState({ name: e.target.value })}\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n          />\r\n          <input\r\n            value={this.state.city}\r\n            onChange={(e) => this.setState({ city: e.target.value })}\r\n            type=\"text\"\r\n            placeholder=\"City\"\r\n          />\r\n          <input\r\n            value={this.state.adress}\r\n            onChange={(e) => this.setState({ adress: e.target.value })}\r\n            type=\"text\"\r\n            placeholder=\"Adress\"\r\n          />\r\n          <input\r\n            value={this.state.person}\r\n            onChange={(e) => this.setState({ person: e.target.value })}\r\n            type=\"text\"\r\n            placeholder=\"Contact Person\"\r\n          />\r\n          <input\r\n            value={this.state.email}\r\n            onChange={(e) => this.setState({ email: e.target.value })}\r\n            type=\"text\"\r\n            placeholder=\"Email\"\r\n          />\r\n          <input\r\n            value={this.state.number}\r\n            onChange={(e) => this.setState({ number: e.target.value })}\r\n            type=\"number\"\r\n            placeholder=\"Phone\"\r\n          />\r\n          <button type=\"button\" value=\"Submit\" onClick={() => this.submit()}>\r\n            Submit order\r\n          </button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CreateOrder\r\n","import React, { Component } from 'react'\r\nimport ClientOrders from './ClientOrders'\r\nimport Delete from '../Functional/Delete'\r\nimport Get from '../Functional/Get'\r\nimport CreateOrder from '../Orders/CreateOrder'\r\nclass Client extends Component {\r\n  state = {\r\n    datas: [],\r\n  }\r\n  handleDatas = (datasArray) => {\r\n    this.setState({ datas: datasArray })\r\n  }\r\n\r\n  render() {\r\n    let { datas } = this.state\r\n    return (\r\n      <div className=\"Client\">\r\n        <Get path={\"client/\"+ this.props.match.params.id} handleData={this.handleDatas} />\r\n        {datas.map((item) => {\r\n          return (\r\n            <div className=\"Wrapper Column\">\r\n              <h2>Client: </h2>\r\n              <div className=\"Item Row-2\">\r\n                <div className=\"Head Item\">\r\n                  <div className=\"Name\">Name</div>\r\n                  <div className=\"City\">City</div>\r\n                  <div className=\"Client\">ID</div>\r\n                </div>\r\n                <div className=\"Item\">\r\n                  <div className=\"\">{item.name}</div>\r\n                  <div className=\"\">{item.city}</div>\r\n                  <div className=\"\">{item.ClientID}</div>\r\n                </div>\r\n              </div>\r\n              <h2>Orders:</h2>\r\n              <div className=\"Item\">\r\n                <div className=\"Head Item Row-2\">\r\n                  <div>Name</div>\r\n                  <div>City</div>\r\n                </div>\r\n                \r\n                 <ClientOrders ClientID={this.props.match.params.id} />\r\n                <CreateOrder ClientID={this.props.match.params.id}/>\r\n              </div>\r\n              <div className=\"Item\">\r\n                <Delete type=\"Client\" path={\"client/\"+ this.props.match.params.id} />\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Client\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport OrderTanks from './OrderTanks'\r\n\r\nclass OrderListItem extends Component {\r\n  render() {\r\n    let order = this.props.order\r\n    return (\r\n      <div id=\"OrderLisItem\" className=\"OrdersList-Item Item Hover Row-3\" key={order.OrderID}>\r\n        <div className=\"Number\">\r\n          <div key={order.OrderID}>{order.OrderID}</div>\r\n        </div>\r\n        <Link  to={'/order/' + order.OrderID}>\r\n          <div key={order.OrderID} className=\"Row-3\">\r\n            <div key={\"name\"}  className=\"Name\">{order.name}</div>\r\n            <div key={\"city\"} >{order.city}</div>\r\n            <div key={\"client\"} >{order.OrderClient}</div>\r\n          </div>\r\n        </Link>\r\n        <div className=\"OrdersList-Item-Tanks Column\">\r\n        {/*   <OrderTanks key={order.OrderID} order={order.OrderID} /> */}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default OrderListItem\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Get from '../Functional/Get'\r\nclass OrderTanks extends Component {\r\n  state = {\r\n    datas: [],\r\n  }\r\n  handleDatas = (datasArray) => {\r\n    this.setState({ datas: datasArray })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"OrderTank\">\r\n        <Get\r\n          path={'order/tanks/' + this.props.order}\r\n          handleData={this.handleDatas}\r\n        />\r\n        {this.state.datas.map((item) => (\r\n          <Link to={'/tank/' + item.TankID} key={item.TankID}>\r\n            <div className=\"Row-3 Item Hover\">\r\n              <div>{item.capacity}</div>\r\n              <div>{item.TankID}</div>\r\n              <div>{item.diameter}</div>\r\n            </div>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default OrderTanks\r\n","import React, { Component } from 'react'\r\nimport Order from './OrderListItem'\r\nimport Get from '../Functional/Get'\r\nimport CreateOrder from './CreateOrder'\r\n\r\nclass Orders extends Component {\r\n  state = {\r\n    datas: [],\r\n  }\r\n  handleDatas = (datasArray) => {\r\n    this.setState({ datas: datasArray })\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"Orders\" className=\"Wrapper\">\r\n        <h2>Orders:</h2>\r\n        <div className=\"OrdersList\">\r\n          <div id=\"OrdersHeader\" className=\"OrdersList-Item Head Item Row-3\">\r\n            <div className=\"Number\">\r\n              <div>No</div>\r\n            </div>\r\n            <div className=\"Row-3\">\r\n              <div>Name</div>\r\n              <div>City</div>\r\n              <div>Client</div>\r\n            </div>\r\n            <div className=\"Row-3\">\r\n              <div>Capacity</div>\r\n              <div>Height</div>\r\n              <div>Diameter</div>\r\n            </div>\r\n          </div>\r\n          <Get path=\"orders\" handleData={this.handleDatas} />\r\n          {this.state.datas.map((order) => {\r\n            return <Order key={order.OrderID} order={order} />\r\n          })}\r\n        </div>\r\n\r\n        <CreateOrder />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Orders\r\n","import React, { Component } from 'react'\r\nimport OrderTanks from './OrderTanks'\r\nimport Delete from '../Functional/Delete'\r\nimport { Link } from 'react-router-dom'\r\nimport Get from '../Functional/Get'\r\nlet host = 'http://localhost:4000/orders/'\r\n\r\nclass Order extends Component {\r\n  state = {\r\n    datas: [],\r\n  }\r\n  handleDatas = (datasArray) => {\r\n    this.setState({ datas: datasArray })\r\n  }\r\n  render() {\r\n    let { datas } = this.state\r\n    return (\r\n      <div id=\"Order\">\r\n        <Get\r\n          path={'orders/' + this.props.match.params.id}\r\n          handleData={this.handleDatas}\r\n        />\r\n        {this.state.datas.map((item) => {\r\n          return (\r\n            <div className=\"Wrapper\">\r\n              <div className=\"Item\">\r\n                <h2 className=\"Head Item\">Order name: {item.name}</h2>\r\n                <p>Order name: {item.name}</p>\r\n                <p>Order city: {item.city}</p>\r\n              </div>\r\n\r\n              <p>Tanks: </p>\r\n              <div className=\"Head Item Row-3\">\r\n                <div>city</div>\r\n                <div>city</div>\r\n                <div>city</div>\r\n              </div>\r\n              {/* <OrderTanks order={this.props.match.params.id} /> */}\r\n\r\n              <div className=\"Row Item\">\r\n                <Delete type=\"Order\" path={\"orders/\" + this.props.match.params.id} />\r\n                <Link\r\n                  to={{\r\n                    pathname: '/orderedit',\r\n                    state: {\r\n                      order: datas[0],\r\n                    },\r\n                  }}\r\n                >\r\n                  <button> Edit order</button>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Order\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport _ from 'lodash'\r\n\r\nclass EditOrder extends Component {\r\n  state = {\r\n    order: this.props.location.state.order,\r\n  }\r\n  updateCapacity(event) {\r\n    this.setState((prevState) => {\r\n      let order = Object.assign({}, prevState.order)\r\n      order.status = event\r\n      axios\r\n        .put('http://localhost:4000/orders/' + this.state.order.OrderID, {\r\n          status: order.status,\r\n          orderId: this.state.order.OrderID,\r\n        })\r\n        .then(function (response) {\r\n          console.log(response.data)\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error)\r\n        })\r\n\r\n      return { order }\r\n    })\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    alert('Podano następujące imię: ')\r\n    console.log(this.fileInput.files[0].name)\r\n    event.preventDefault()\r\n  }\r\n  render() {\r\n    let { order } = this.state\r\n\r\n    return (\r\n      <div id=\"Tank\" className=\"Wrapper\">\r\n        <h2>Tank</h2>\r\n        <div className=\"TanksList-Item Item Row-2\">\r\n          <div className=\"Head Item\">\r\n            <div>Capacity</div>\r\n            <div>Order</div>\r\n            <div>ID</div>\r\n          </div>\r\n\r\n          <div className=\"Item\" key={order.OrderID}>\r\n            <div key={order.TankCapacity}>{order.capacity} m3</div>\r\n            <div key={order.OrderName}>{order.status}</div>\r\n            <div key={order.OrderID}>{order.OrderID}</div>\r\n            <form onSubmit={this.handleSubmit}>\r\n              <label>\r\n                Capacity:\r\n                <input\r\n                  type=\"number\"\r\n                  value={this.state.order.status}\r\n                  onChange={(event) => this.updateCapacity(event.target.value)}\r\n                />\r\n                <select\r\n                  value={this.state.order.status}\r\n                  onChange={(event) => this.updateCapacity(event.target.value)}\r\n                >\r\n                  <option value=\"New\">New</option>\r\n                  <option value=\"Project\">Project</option>\r\n                  <option selected value=\"Send\">\r\n                    Send\r\n                  </option>\r\n                  <option value=\"Mango\">Mango</option>\r\n                </select>\r\n              </label>\r\n              <label>\r\n                <input type=\"file\" ref={(input) => (this.fileInput = input)} />\r\n              </label>\r\n              <input type=\"submit\" value=\"Wyślij\" />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditOrder\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport Get from '../Functional/Get'\r\nclass CreateTank extends Component {\r\n  state = {\r\n    capacity: '',\r\n    height: '',\r\n    diameter: '',\r\n    type: '',\r\n    OrderID: '',\r\n    datas: [],\r\n  }\r\n  handleDatas = (datasArray) => {\r\n    this.setState({ datas: datasArray })\r\n  }\r\n  submit() {\r\n    axios\r\n      .post('http://localhost:4000/tanks', this.state)\r\n      .then(function (response) {\r\n        console.log(response.data)\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n  render() {\r\n    let types = ['VdS', 'PN-EN', 'FM', 'NFPA']\r\n    return (\r\n      <div id=\"CreateOrder\" className=\"Wrapper\">\r\n        <h2>Create Tank: </h2>\r\n        <form className=\"flex flex-column Item\">\r\n        <Get path=\"orders\" handleData={this.handleDatas} />\r\n          <select\r\n            name=\"Order\"\r\n            value={this.state.OrderID}\r\n            onChange={(e) => this.setState({ OrderID: e.target.value })}\r\n          >\r\n            {this.state.datas.map((item) => (\r\n              <option key={item.OrderID} value={item.OrderID}>\r\n                {item.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n\r\n          <input\r\n            value={this.state.capacity}\r\n            onChange={(e) => this.setState({ capacity: e.target.value })}\r\n            type=\"number\"\r\n            placeholder=\"Capacity\"\r\n          />\r\n          <input\r\n            value={this.state.height}\r\n            onChange={(e) => this.setState({ height: e.target.value })}\r\n            type=\"number\"\r\n            placeholder=\"Height\"\r\n          />\r\n\r\n          <input\r\n            value={this.state.diameter}\r\n            onChange={(e) => this.setState({ diameter: e.target.value })}\r\n            type=\"number\"\r\n            placeholder=\"Diameter\"\r\n          />\r\n          <select\r\n            name=\"Type\"\r\n            value={this.state.type}\r\n            onChange={(e) => this.setState({ type: e.target.value })}\r\n          >\r\n            {types.map((item) => (\r\n              <option key={item} value={item}>\r\n                {item}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <button type=\"button\" value=\"Submit\" onClick={() => this.submit()}>\r\n            Submit Tank\r\n          </button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CreateTank\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport CreateTank from './CreateTank'\r\nimport Get from '../Functional/Get'\r\nimport _ from 'lodash'\r\nclass Tanks extends Component {\r\n  state = {\r\n    datas: [],\r\n  }\r\n  handleDatas = (datasArray) => {\r\n    this.setState({ datas: datasArray })\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"Tanks\" className=\"Wrapper\">\r\n        <h2>Tanks:</h2>\r\n        <div className=\"TanksList Wrapper\">\r\n          <div className=\"TanksList-Item Column\">\r\n            <div className=\"Item Head Row-3\">\r\n              <div>Capacity</div>\r\n              <div>Order</div>\r\n              <div>ID</div>\r\n            </div>\r\n          </div>\r\n          <Get path=\"tanks\" handleData={this.handleDatas} />\r\n          {this.state.datas.map((tank) => (\r\n            <Link\r\n              to={'/tank/' + tank.TankID}\r\n              key={tank.OrderName + '_' + tank.TankID}\r\n            >\r\n              <div className=\"Item Row-3 Hover\">\r\n                <div>{tank.TankCapacity}</div>\r\n                <div>{tank.OrderName}</div>\r\n                <div>{tank.TankID}</div>\r\n              </div>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n        <CreateTank />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tanks\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nclass CrateMaterial extends Component {\r\n  state = {\r\n    name: '',\r\n    quantity: '',\r\n    partnumber: '',\r\n    TankID: this.props.tank,\r\n  }\r\n  submit(event) {\r\n    axios\r\n      .post('http://localhost:4000/materials/', this.state)\r\n      .then(function (response) {\r\n        console.log(response.data)\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Item\">\r\n        <h3>Create Material:</h3>\r\n        <form className=\"Item flex flex-column\">\r\n          <label>\r\n            Name:\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.name}\r\n              onChange={(e) => this.setState({ name: e.target.value })}\r\n            />\r\n          </label>\r\n          <label>\r\n            Partnumbuer:\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.partnumber}\r\n              onChange={(e) => this.setState({ partnumber: e.target.value })}\r\n            />\r\n          </label>\r\n          <label>\r\n            Quantity:\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.quantity}\r\n              onChange={(e) => this.setState({ quantity: e.target.value })}\r\n            />\r\n          </label>\r\n          <button type=\"submit\" value=\"Submit\" onClick={() => this.submit()}>\r\n            Submit material\r\n          </button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default CrateMaterial\r\n","import React, { Component } from 'react'\r\n\r\nclass DrawTank extends Component {\r\n  state = {\r\n    height: 21,\r\n    diameter: this.props.tank,\r\n    tanks: 0,\r\n  }\r\n\r\n  render() {\r\n    let { tanks } = this.state\r\n    return (\r\n      <div id=\"DrawTank\" className=\"Wrapper\">\r\n        <h2>DrawTank: </h2>\r\n        <div id=\"svg\">\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.diameter}\r\n            onChange={(e) => this.setState({ diameter: e.target.value })}\r\n          />\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 200 200\">\r\n            <g fill=\"#888\">\r\n              <circle cx=\"100\" cy=\"100\" r={this.state.diameter} />\r\n              <rect x=\"50\" y=\"100\" width={this.state.diameter*10} height={this.state.height} />\r\n              <polygon points=\"50,80 100,100 50,100\" />\r\n              <path d=\"M520.5 78.1z\" />\r\n            </g>\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DrawTank\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Get from '../Functional/Get'\r\nclass TankMaterials extends Component {\r\n  state = {\r\n    datas: [],\r\n  }\r\n  handleDatas = (datasArray) => {\r\n    this.setState({ datas: datasArray })\r\n  }\r\n\r\n  render() {\r\n      return (\r\n        <div className=\"TankMaterials Wrapper Item\">\r\n                  <Get\r\n          path={'orders/' + this.props.TankId}\r\n          handleData={this.handleDatas}\r\n        />\r\n          <h3>Tank Materials:</h3>\r\n          <div className=\"Row-3 Item Head\">\r\n            <div>MaterialID</div>\r\n            <div>Name</div>\r\n            <div>Quantity</div>\r\n          </div>\r\n          {this.state.datas.map((item) => (\r\n            <Link to={'/materials/' + item.MaterialID} key={item.MaterialID}>\r\n              <div className=\"Row-3 Item Hover\">\r\n                <div>{item.MaterialID}</div>\r\n                <div>{item.name}</div>\r\n                <div>{item.quantity}</div>\r\n              </div>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default TankMaterials\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport _ from 'lodash'\r\nimport CreateMaterial from '../Materials/CreateMaterial'\r\nimport TankMaterials from './TankMaterials'\r\nimport DrawTank from './DrawTank'\r\nimport Delete from '../Functional/Delete'\r\nimport Get from '../Functional/Get'\r\nlet host = 'http://localhost:4000/tanks/'\r\n\r\nclass Tank extends Component {\r\n  state = {\r\n    datas: [],\r\n  }\r\n  handleDatas = (datasArray) => {\r\n    this.setState({ datas: datasArray })\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"Tank\" className=\"Wrapper\">\r\n        <Get\r\n          path={'tanks/' + this.props.match.params.id}\r\n          handleData={this.handleDatas}\r\n        />\r\n        <h2>Tank</h2>\r\n        <div className=\"TanksList-Item Item Row-2\" key=\"header\">\r\n          <div className=\"Head Item\">\r\n            <div className=\"Capacity\">Capacity</div>\r\n            <div className=\"Height\">Height</div>\r\n            <div className=\"Diameter\">Diameter</div>\r\n            <div className=\"ID\">ID</div>\r\n          </div>\r\n          {this.state.datas.map((item) => {\r\n            if (item.lenght > 0) {\r\n              return (\r\n                <div className=\"Item\" key={item.TankID}>\r\n                  <div>{item.capacity} m3</div>\r\n                  <div>{item.height} m</div>\r\n                  <div>{item.diameter} m</div>\r\n                  <div>{item.TankID}</div>\r\n                  <DrawTank tank={item.height} />\r\n                  <Link\r\n                    to={{\r\n                      pathname: '/tankedit',\r\n                      state: {\r\n                        tank: this.state.datas[0],\r\n                      },\r\n                    }}\r\n                  >\r\n                    <button> Edit tank</button>\r\n                  </Link>\r\n                </div>\r\n              )\r\n            } else {\r\n              return <div className=\"null\">null</div>\r\n            }\r\n          })}\r\n        </div>\r\n        <h2>Materials:</h2>\r\n{/*         <TankMaterials TankId={this.props.match.params.id} />\r\n */}        <CreateMaterial tank={this.props.match.params.id} />\r\n        <Delete path={\"tanks/\" + this.props.match.params.id} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tank\r\n","import React, { Component, useState } from 'react'\r\nimport axios from 'axios'\r\nimport _ from 'lodash'\r\n\r\nclass EditTank extends Component {\r\n  state = {\r\n    tank: this.props.location.state.tank,\r\n  }\r\n  updateCapacity(event) {\r\n    this.setState((prevState) => {\r\n      let tank = Object.assign({}, prevState.tank)\r\n      tank.capacity = event\r\n      axios\r\n      .put('http://localhost:4000/tanks/'+this.state.tank.TankID, {\r\n        capacity: tank.capacity,\r\n        tankId: this.state.tank.TankID\r\n      })\r\n      .then(function (response) {\r\n        console.log(response.data)\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n      return { tank }\r\n    })\r\n\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    alert('Podano następujące imię: ')\r\n    console.log(this.fileInput.files[0].name)\r\n    event.preventDefault()\r\n  }\r\n  render() {\r\n    let { tank } = this.state\r\n\r\n    return (\r\n      <div className=\"Tank Wrapper\">\r\n        <h2>Tank</h2>\r\n        <div className=\"TanksList-Item Item Row-2\" key=\"header\">\r\n          <div className=\"Head Item\">\r\n            <div className=\"Name\">Capacity</div>\r\n            <div className=\"City\">Order</div>\r\n            <div className=\"Client\">ID</div>\r\n          </div>\r\n\r\n          <div className=\"Item\" key={tank.TankID}>\r\n            <div key={tank.TankCapacity}>{tank.capacity} m3</div>\r\n            <div key={tank.OrderName}>{tank.height}m</div>\r\n            <div key={tank.TankID}>{tank.TankID}</div>\r\n            <form onSubmit={this.handleSubmit}>\r\n              <label>\r\n                Capacity:\r\n                <input\r\n                  type=\"number\"\r\n                  value={this.state.tank.capacity}\r\n                  onChange={(event) => this.updateCapacity(event.target.value)}\r\n                />\r\n              </label>\r\n              <label>\r\n                <input type=\"file\" ref={(input) => (this.fileInput = input)} />\r\n              </label>\r\n              <input type=\"submit\" value=\"Wyślij\" />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditTank\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport _ from 'lodash'\r\nimport Get from '../Functional/Get'\r\nclass Supplies extends Component {\r\n  state = {\r\n    datas: [],\r\n  }\r\n  handleDatas = (datasArray) => {\r\n    this.setState({ datas: datasArray })\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"Supplies Wrapper\">\r\n        <Get path={'supplies'} handleData={this.handleDatas} />\r\n        <h2>Supplies:</h2>\r\n        <div className=\"Column\" key=\"header\">\r\n          <div className=\"Row-3 Head Item\">\r\n            <div className=\"Name\">Created</div>\r\n            <div className=\"City\">Supply ID</div>\r\n            <div className=\"Client\">Materials</div>\r\n          </div>\r\n        </div>\r\n        {this.state.datas.map((supply) => (\r\n          <Link to={'/supply/' + supply.SupplyID} key={supply.SupplyID}>\r\n            <div className=\"Row-3 Item Hover\">\r\n              <div>{supply.created}</div>\r\n              <div>{supply.SupplyID}</div>\r\n              <div>{supply.SupplyID}</div>\r\n            </div>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Supplies\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Get from '../Functional/Get'\r\nimport Delete from '../Functional/Delete'\r\n\r\nclass Order extends Component {\r\n  state = {\r\n    datas: [],\r\n  }\r\n  handleDatas = (datasArray) => {\r\n    this.setState({ datas: datasArray })\r\n  }\r\n  render() {\r\n    let { datas } = this.state\r\n    return (\r\n      <div className=\"Order\">\r\n        <Get\r\n          path={'supplies/' + this.props.match.params.id}\r\n          handleData={this.handleDatas}\r\n        />\r\n        {datas.map((item) => {\r\n          return (\r\n            <div className=\"Wrapper\">\r\n              <div className=\"Item\">\r\n                <h2 className=\"Head Item\">Supply name: {item.name}</h2>\r\n                <p>SupplID: {item.SupplyID}</p>\r\n                <p>Material: {item.MaterialID}</p>\r\n              </div>\r\n\r\n              <p>Tanks: </p>\r\n              <div className=\"Head Item Row-3\">\r\n                <div>city</div>\r\n                <div>city</div>\r\n                <div>city</div>\r\n              </div>\r\n              <Link\r\n                to={{\r\n                  pathname: '/supplyedit',\r\n                  state: {\r\n                    supply: datas[0],\r\n                  },\r\n                }}\r\n              >\r\n                <button> Edit supply</button>\r\n                <div className=\"Item\">\r\n                <Delete path={\"supplies/\"+ this.props.match.params.id} />\r\n              </div>\r\n              </Link>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Order\r\n","import React, { Component} from 'react'\r\nimport axios from 'axios'\r\n\r\nclass EditSupply extends Component {\r\n  state = {\r\n    supply: this.props.location.state.supply,\r\n  }\r\n  updateCapacity(event) {\r\n    this.setState((prevState) => {\r\n      let supply = Object.assign({}, prevState.supply)\r\n      supply.status = event\r\n      axios\r\n        .put('http://localhost:4000/supplies/' + this.state.supply.SupplyID, {\r\n          status: supply.status,\r\n          SupplyID: this.state.supply.SupplyID,\r\n        })\r\n        .then(function (response) {\r\n          console.log(response.data)\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error)\r\n        })\r\n\r\n      return { supply }\r\n    })\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    alert('Podano następujące imię: ')\r\n    console.log(this.fileInput.files[0].name)\r\n    event.preventDefault()\r\n  }\r\n  render() {\r\n    let { supply } = this.state\r\n\r\n    return (\r\n      <div className=\"Tank Wrapper\">\r\n        <h2>Tank</h2>\r\n        <div className=\"TanksList-Item Item Row-2\" key=\"header\">\r\n          <div className=\"Head Item\">\r\n            <div className=\"Name\">Capacity</div>\r\n            <div className=\"City\">Order</div>\r\n            <div className=\"Client\">ID</div>\r\n          </div>\r\n\r\n          <div className=\"Item\" key={supply.OrderID}>\r\n            <div key={supply.status}>{supply.status}</div>\r\n            <form onSubmit={this.handleSubmit}>\r\n              <label>\r\n                Capacity:\r\n                <input\r\n                  type=\"number\"\r\n                  value={this.state.supply.status}\r\n                  onChange={(event) => this.updateCapacity(event.target.value)}\r\n                />\r\n                <select\r\n                  value={this.state.supply.status}\r\n                  onChange={(event) => this.updateCapacity(event.target.value)}\r\n                >\r\n                  <option value=\"New\">New</option>\r\n                  <option value=\"Project\">Project</option>\r\n                  <option value=\"Send\">\r\n                    Send\r\n                  </option>\r\n                  <option value=\"Mango\">Mango</option>\r\n                </select>\r\n              </label>\r\n              <label>\r\n                <input type=\"file\" ref={(input) => (this.fileInput = input)} />\r\n              </label>\r\n              <input type=\"submit\" value=\"Wyślij\" />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditSupply\r\n","import React, { Component } from 'react'\r\nimport Get from '../Functional/Get'\r\nclass Materials extends Component {\r\n  state = {\r\n    datas: [],\r\n  }\r\n  handleDatas = (datasArray) => {\r\n    this.setState({ datas: datasArray })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"MaterialsList-content Wrapper \">\r\n        <h2>Materials:</h2>\r\n        <div className=\"MaterialsList-Item Column\" key=\"header\">\r\n          <div className=\"Row-3 Head Item\">\r\n            <div className=\"Name\">Capacity</div>\r\n            <div className=\"City\">Order</div>\r\n            <div className=\"Client\">ID</div>\r\n          </div>\r\n        </div>\r\n        <Get path=\"materials\" handleData={this.handleDatas} />\r\n        {this.state.datas.map((material) => (\r\n          <div className=\"Row-3 Item Hover\" key={material.MaterialID}>\r\n            <div>{material.name}</div>\r\n            <div>{material.TankID}</div>\r\n            <div>{material.quantity}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Materials\r\n","import React, { Component } from 'react'\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom'\r\n\r\nimport Home from './Home'\r\nimport Header from './Header'\r\n// Components\r\nimport Clients from './Clients/Clients'\r\nimport CreateClient from './Clients/CreateClient'\r\nimport Client from './Clients/Client'\r\n\r\nimport Orders from './Orders/Orders'\r\nimport CreateOrder from './Orders/CreateOrder'\r\nimport Order from './Orders/Order'\r\nimport EditOrder from './Orders/EditOrder'\r\n\r\nimport Tanks from './Tanks/Tanks'\r\nimport Tank from './Tanks/Tank'\r\nimport EditTank from './Tanks/EditTank'\r\n\r\nimport Supplies from './Supplies/Supplies'\r\nimport Supply from './Supplies/Supply'\r\nimport EditSupply from './Supplies/EditSupply'\r\n\r\nimport Materials from './Materials/Materials'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Header />\r\n        <main>\r\n        <Redirect from='/client/:id' to='/clients'/>\r\n          <Route exact path=\"/clients\" component={Clients} />\r\n          <Route exact path=\"/clients/create\" component={CreateClient} />\r\n          <Route exact path=\"/client/:id\" component={Client} />\r\n          <Route exact path=\"/orders\" component={Orders} />\r\n          <Route exact path=\"/orders/create\" component={CreateOrder} />\r\n          <Route exact path=\"/order/:id\" component={Order} />\r\n          <Route exact path=\"/tanks\" component={Tanks} />\r\n          <Route exact path=\"/tank/:id\" component={Tank} />\r\n          <Route exact path=\"/supplies\" component={Supplies} />\r\n          <Route exact path=\"/supply/:id\" component={Supply} />\r\n          <Route exact path=\"/tankedit\" component={EditTank} />\r\n          <Route exact path=\"/orderedit\" component={EditOrder} />\r\n          <Route exact path=\"/supplyedit\" component={EditSupply} />\r\n          <Route exact path=\"/materials\" component={Materials} />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n          </Switch>\r\n        </main>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType !== null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister()\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message)\r\n      })\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/index.sass\";\r\nimport App from \"./components/App\";\r\n//import \"@atlaskit/ccc-reset\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\n\r\n\r\n// 4\r\nReactDOM.render(\r\n  <Router>\r\n      <App />\r\n  </Router>,\r\n  document.body\r\n);\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}